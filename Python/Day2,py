def input_to_list(input):
    unsafe_data = []
    with open(input) as file:
        lines = file.readlines()
        for line in lines:
            unsafe_data.append([line.strip()])
    return unsafe_data


def make_reports(data):
    reports = []
    for line in data:
        report = [int(str) for str in line[0].split()]
        reports.append(report)
    return reports


def sperate_reports(reports):
    reports_safety = []
    for report in reports:
        report_safty = analyse_safety(report)
        if "unsafe" in report_safty:
            reports_safety.append(dampener_module(report))
        else:
            reports_safety.append(analyse_safety(report))
    return reports_safety


def analyse_safety(report):
    direction = ""
    safety = []
    for index in range(1, len(report)):
        diff = report[index] - report[index - 1]
        if index == 1:
            direction = "descending" if diff < 0 else "ascending"
        new_direction = "descending" if diff <= 0 else "ascending"
        if direction != new_direction:
            safety.append("unsafe")
            break
        abs_diff = abs(diff)
        if 0 < abs_diff < 4:
            safety.append("safe")
        else:
            safety.append("unsafe")
    return safety


def dampener_module(report):
    for index in range(len(report)):
        attempt = report.copy()
        attempt.pop(index)
        attempt_safety = analyse_safety(attempt)
        if "unsafe" not in attempt_safety:
            return attempt_safety
    return analyse_safety(report)


def safety_count(safety_reports):
    safe_count = 0
    for report in safety_reports:
        if "unsafe" not in report:
            safe_count += 1
    return safe_count


def main():
    unsafe_data = input_to_list("Day2.txt")
    reports = make_reports(unsafe_data)
    safety_reports = sperate_reports(reports)
    print(safety_count(safety_reports))


if __name__ == "__main__":
    main()
